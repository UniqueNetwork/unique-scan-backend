version: "3"

networks:
  scan:
    external: false

services:
  dev-chain:
    image: uniquenetwork/opal-testnet-local
    ports:
      - 9844:9844
      - 9944:9944
    networks:
      - scan

  scan-web-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: scan-web-api
    ports:
      - "3031:3031"
    networks:
      - scan
    depends_on:
      - dev-chain
      - postgres
      - crawler
    restart: on-failure
    environment:
      - PORT=3031
      - POSTGRES_USER=polkastats
      - POSTGRES_PASSWORD=polkastats
      - POSTGRES_DATABASE=polkastats
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432

  postgres:
    image: postgres:14.2-alpine
    container_name: scan-database
    depends_on:
      - dev-chain
    networks:
      - scan
    environment:
      - POSTGRES_USER=polkastats
      - POSTGRES_PASSWORD=polkastats
      - POSTGRES_DB=polkastats
      - TZ=Europe/Moscow
      - PGTZ=Europe/Moscow
    ports:
      - "3032:5432"
    volumes:
      - scan-pgdata:/var/lib/postgresql/data
      - /etc/localtime:/etc/localtime:ro

  crawler:
    build:
      context: .
      dockerfile: Dockerfile.crawler
    container_name: scan-crawler
    networks:
      - scan
    depends_on:
      - dev-chain
      - crawler-migrations
      - gateway
    restart: on-failure
    environment:
      - NODE_ENV=production
      - ARCHIVE_GQL_URL=http://gateway:8000/graphql
      - CHAIN_WS_URL=${CHAIN_WS_URL}
      - POSTGRES_HOST=postgres
      - POSTGRES_USER=polkastats
      - POSTGRES_PASSWORD=polkastats
      - POSTGRES_DATABASE=polkastats
      - PROMETHEUS_PORT=9003
      - HOST_CRAWLER=0.0.0.0

  crawler-migrations:
    build:
      context: .
      dockerfile: Dockerfile.crawler
    container_name: scan-crawler-migrations
    networks:
      - scan
    depends_on:
      - dev-chain
      - postgres
    restart: on-failure
    environment:
      - NODE_ENV=production
      - ARCHIVE_GQL_URL=http://gateway:8000/graphql
      - CHAIN_WS_URL=${CHAIN_WS_URL}
      - POSTGRES_HOST=postgres
      - POSTGRES_USER=polkastats
      - POSTGRES_PASSWORD=polkastats
      - POSTGRES_DATABASE=polkastats
      - PROMETHEUS_PORT=9003
      - HOST_CRAWLER=0.0.0.0
    entrypoint: ["npm", "run", "db:migration:run"]

# Subsquid Archive
  archive-db:
    image: postgres:14.2-alpine
    container_name: archive-db
    depends_on:
      - dev-chain
    networks:
      - scan
    restart: always
    volumes:
      - archive-pgdata:/var/lib/postgresql/data
      - /etc/localtime:/etc/localtime:ro
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: squid-archive

  ingest:
    depends_on:
      - dev-chain
      - archive-db
    restart: on-failure
    image: subsquid/substrate-ingest:firesquid
    networks:
      - scan
    container_name: ingest
    command: [
       "-e", "${CHAIN_WS_URL}",
       "-c", "10",
       "--prom-port", "9090",
       "--out", "postgres://postgres:postgres@archive-db:5432/squid-archive"
    ]

  gateway:
    depends_on:
      - dev-chain
      - archive-db
    image: subsquid/substrate-gateway:firesquid
    networks:
      - scan
    environment:
      RUST_LOG: "substrate_gateway=info,actix_server=info"
    command: [
       "--database-url", "postgres://postgres:postgres@archive-db:5432/squid-archive",
       "--database-max-connections", "3",
    ]
    ports:
      - "8888:8000"

  explorer:
    image: subsquid/substrate-explorer:firesquid
    networks:
      - scan
    depends_on:
      - dev-chain
      - archive-db
    environment:
      DB_TYPE: postgres
      DB_HOST: archive-db
      DB_PORT: "5432"
      DB_NAME: "squid-archive"
      DB_USER: "postgres"
      DB_PASS: "postgres"
    ports:
      - "4444:3000"

volumes:
  scan-pgdata:
    external: false

  archive-pgdata:
    external: false
